{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hjoo/distributed_systems/client/src/App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\n\nclass DisplayThings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formStateHandler = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.formSubmitHandler = event => {\n      alert(\"form saved\");\n      console.log(event);\n      this.setUser();\n    };\n\n    this.state = {\n      time: \"1111\",\n      name: \"\",\n      users: [{\n        name: \"\"\n      }],\n      status: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTime();\n    this.getUsers();\n    this.interval = setInterval(() => this.setState({\n      time: this.getTime()\n    }), 1000);\n  }\n\n  componentWillUnmount() {\n    this.getTime();\n    this.getUsers();\n    clearInterval(this.interval);\n  }\n\n  getTime() {\n    fetch(\"http://localhost:3001\").then(response => {\n      return response.text();\n    }).then(response => {\n      this.setState({\n        time: response\n      });\n    });\n  }\n\n  getUsers() {\n    fetch(\"http://localhost:3001/users\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"HTTP error\" + response.status);\n      }\n\n      return response.json();\n    }).then(response => {\n      console.log(response);\n      /*this.setState({ users: response });*/\n    });\n  }\n\n  setUser() {\n    fetch(\"http://localhost:3001\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        user: \"teppo\",\n        information: \"Setting user\"\n      })\n    }).then(response => {\n      this.setState({\n        status: response\n      });\n      console.log(response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Earlier messages:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [\"Time is \", this.state.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.formSubmitHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \" Leave information about your visit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Who was the visitor?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: this.formStateHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DisplayThings;","map":{"version":3,"sources":["/home/hjoo/distributed_systems/client/src/App.js"],"names":["React","Component","DisplayThings","constructor","props","formStateHandler","event","setState","name","target","value","formSubmitHandler","alert","console","log","setUser","state","time","users","status","componentDidMount","getTime","getUsers","interval","setInterval","componentWillUnmount","clearInterval","fetch","then","response","text","ok","Error","json","method","headers","Accept","body","JSON","stringify","user","information","render","map","textAlign"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\n\nclass DisplayThings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      time: \"1111\",\n      name: \"\",\n      users: [\n        {\n          name: \"\",\n        },\n      ],\n      status: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getTime();\n    this.getUsers();\n    this.interval = setInterval(\n      () => this.setState({ time: this.getTime() }),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    this.getTime();\n    this.getUsers();\n    clearInterval(this.interval);\n  }\n\n  formStateHandler = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  formSubmitHandler = (event) => {\n    alert(\"form saved\");\n    console.log(event);\n    this.setUser();\n  };\n\n  getTime() {\n    fetch(\"http://localhost:3001\")\n      .then((response) => {\n        return response.text();\n      })\n      .then((response) => {\n        this.setState({ time: response });\n      });\n  }\n\n  getUsers() {\n    fetch(\"http://localhost:3001/users\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"HTTP error\" + response.status);\n        }\n        return response.json();\n      })\n      .then((response) => {\n        console.log(response);\n        /*this.setState({ users: response });*/\n      });\n  }\n\n  setUser() {\n    fetch(\"http://localhost:3001\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({ user: \"teppo\", information: \"Setting user\" }),\n    }).then((response) => {\n      this.setState({ status: response });\n      console.log(response);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <div>\n              <p> Earlier messages:</p>\n              <p>\n                {this.state.users.map((user) => (\n                  <p>{user.name}</p>\n                ))}\n              </p>\n            </div>\n            <p style={{ textAlign: \"left\" }}>Time is {this.state.time}</p>\n            <form onSubmit={this.formSubmitHandler}>\n              <h4> Leave information about your visit</h4>\n              <p> Who was the visitor?</p>\n              <input type=\"text\" onChange={this.formStateHandler} />\n              <input type=\"submit\" />\n            </form>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default DisplayThings;\n"]},"metadata":{},"sourceType":"module"}