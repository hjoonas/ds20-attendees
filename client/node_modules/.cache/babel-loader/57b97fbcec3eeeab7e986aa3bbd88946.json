{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hjoo/distributed_systems/client/src/App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\n\nclass DisplayThings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formStateHandler = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.formSubmitHandler = event => {\n      alert(\"form saved\");\n      console.log(event);\n      this.setUser();\n    };\n\n    this.state = {\n      time: \"\",\n      value: \"\",\n      users: [{\n        name: \"\",\n        time: \"\"\n      }],\n      status: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTime();\n    this.getUsers();\n    this.interval = setInterval(() => this.setState({\n      time: this.getTime()\n    }), 3000);\n    this.interval2 = setInterval(() => this.setState({\n      users: this.getUsers()\n    }), 3000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.interval2);\n  }\n\n  getTime() {\n    fetch(\"http://localhost:3001/time\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"HTTP error\" + response.status);\n      }\n\n      return response.text();\n    }).then(response => {\n      this.setState({\n        time: response\n      });\n    });\n  }\n\n  getUsers() {\n    fetch(\"http://localhost:3001/users\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"HTTP error\" + response.status);\n      }\n\n      return response.json();\n    }).then(response => {\n      console.log(response);\n      this.setState({\n        users: response\n      });\n    });\n  }\n\n  setUser() {\n    fetch(\"http://localhost:3001/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        user: this.state.value,\n        information: \"Setting user\"\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"HTTP error\" + response.status);\n      }\n\n      this.setState({\n        status: response\n      });\n      console.log(response);\n    });\n  }\n\n  usersToRender(props) {\n    var usersToRender = props.users;\n\n    if (length(props.users) > 0) {}\n\n    return {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Attendees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: [\"if(this.state.users)\", this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [user.name, \" \", user.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.formSubmitHandler,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \" Enter names of attendees \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Name of an attendee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: this.state.value,\n                onChange: this.formStateHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              style: {\n                textAlign: \"left\",\n                marginLeft: \"35%\"\n              },\n              children: [\" \", \"Time is \", this.state.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DisplayThings;","map":{"version":3,"sources":["/home/hjoo/distributed_systems/client/src/App.js"],"names":["React","Component","DisplayThings","constructor","props","formStateHandler","event","setState","value","target","formSubmitHandler","alert","console","log","setUser","state","time","users","name","status","componentDidMount","getTime","getUsers","interval","setInterval","interval2","componentWillUnmount","clearInterval","fetch","then","response","ok","Error","text","json","method","headers","Accept","body","JSON","stringify","user","information","usersToRender","length","render","map","textAlign","marginLeft"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\n\nclass DisplayThings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      time: \"\",\n      value: \"\",\n      users: [\n        {\n          name: \"\",\n          time: \"\",\n        },\n      ],\n      status: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getTime();\n    this.getUsers();\n    this.interval = setInterval(\n      () => this.setState({ time: this.getTime() }),\n      3000\n    );\n    this.interval2 = setInterval(\n      () => this.setState({ users: this.getUsers() }),\n      3000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.interval2);\n  }\n\n  formStateHandler = (event) => {\n    this.setState({ value: event.target.value });\n  };\n\n  formSubmitHandler = (event) => {\n    alert(\"form saved\");\n    console.log(event);\n    this.setUser();\n  };\n\n  getTime() {\n    fetch(\"http://localhost:3001/time\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"HTTP error\" + response.status);\n        }\n        return response.text();\n      })\n      .then((response) => {\n        this.setState({ time: response });\n      });\n  }\n\n  getUsers() {\n    fetch(\"http://localhost:3001/users\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"HTTP error\" + response.status);\n        }\n        return response.json();\n      })\n      .then((response) => {\n        console.log(response);\n        this.setState({ users: response });\n      });\n  }\n\n  setUser() {\n    fetch(\"http://localhost:3001/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: this.state.value,\n        information: \"Setting user\",\n      }),\n    }).then((response) => {\n      if (!response.ok) {\n        throw new Error(\"HTTP error\" + response.status);\n      }\n      this.setState({ status: response });\n      console.log(response);\n    });\n  }\n\n  usersToRender(props) {\n    var usersToRender = props.users;\n    if (length(props.users) > 0) {\n    }\n    return {};\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <div>\n              <h2> Attendees</h2>\n              <ol>\n                if(this.state.users)\n                {this.state.users.map((user) => (\n                  <li>\n                    {user.name} {user.time}\n                  </li>\n                ))}\n              </ol>\n            </div>\n            <div>\n              <form onSubmit={this.formSubmitHandler}>\n                <h4> Enter names of attendees </h4>\n                <p> Name of an attendee</p>\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.formStateHandler}\n                />\n                <input type=\"submit\" />\n              </form>\n              <h6\n                style={{\n                  textAlign: \"left\",\n                  marginLeft: \"35%\",\n                }}\n              >\n                {\" \"}\n                Time is {this.state.time}\n              </h6>\n            </div>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default DisplayThings;\n"]},"metadata":{},"sourceType":"module"}